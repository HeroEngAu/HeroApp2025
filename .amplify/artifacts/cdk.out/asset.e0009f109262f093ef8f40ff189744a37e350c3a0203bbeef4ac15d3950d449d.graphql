type Form @aws_iam @aws_api_key {
  userId: String
  createdAt: AWSDateTime
  published: Boolean
  name: String
  description: String
  content: String
  visits: Int
  submissions: Int
  shareURL: String
  FormSubmissions(filter: ModelFormSubmissionsFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFormSubmissionsConnection
  projID: ID
  projects: Projectt
  equipmentTAGs(filter: ModelFormTag1FilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFormTag1Connection
  id: ID!
  updatedAt: AWSDateTime!
}

type Client @aws_iam @aws_api_key {
  ClientName: String!
  projects(filter: ModelProjecttFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelProjecttConnection
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Projectt @aws_iam @aws_api_key {
  projectID: String!
  projectName: String!
  ClientID: ID
  client: Client
  forms(filter: ModelFormFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFormConnection
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type EquipmentTag2 @aws_iam @aws_api_key {
  Tag: String!
  EquipmentName: String!
  forms(filter: ModelFormTag1FilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFormTag1Connection
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type FormTag1 @aws_iam @aws_api_key {
  formID: ID
  tagID: ID
  contentTest: String
  equipmentTag: EquipmentTag2
  form: Form
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type FormSubmissions @aws_iam @aws_api_key {
  formId: String
  createdAt: AWSDateTime
  content: String
  form: Form
  id: ID!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelFormConnection @aws_api_key @aws_iam {
  items: [Form]!
  nextToken: String
}

input ModelFormFilterInput {
  userId: ModelStringInput
  createdAt: ModelStringInput
  published: ModelBooleanInput
  name: ModelStringInput
  description: ModelStringInput
  content: ModelStringInput
  visits: ModelIntInput
  submissions: ModelIntInput
  shareURL: ModelStringInput
  projID: ModelIDInput
  id: ModelIDInput
  updatedAt: ModelStringInput
  and: [ModelFormFilterInput]
  or: [ModelFormFilterInput]
  not: ModelFormFilterInput
}

type Query {
  getForm(id: ID!): Form @aws_api_key @aws_iam
  listForms(filter: ModelFormFilterInput, limit: Int, nextToken: String): ModelFormConnection @aws_api_key @aws_iam
  getClient(id: ID!): Client @aws_api_key @aws_iam
  listClients(filter: ModelClientFilterInput, limit: Int, nextToken: String): ModelClientConnection @aws_api_key @aws_iam
  getProjectt(id: ID!): Projectt @aws_api_key @aws_iam
  listProjectts(filter: ModelProjecttFilterInput, limit: Int, nextToken: String): ModelProjecttConnection @aws_api_key @aws_iam
  getEquipmentTag2(id: ID!): EquipmentTag2 @aws_api_key @aws_iam
  listEquipmentTag2s(filter: ModelEquipmentTag2FilterInput, limit: Int, nextToken: String): ModelEquipmentTag2Connection @aws_api_key @aws_iam
  getFormTag1(id: ID!): FormTag1 @aws_api_key @aws_iam
  listFormTag1s(filter: ModelFormTag1FilterInput, limit: Int, nextToken: String): ModelFormTag1Connection @aws_api_key @aws_iam
  getFormSubmissions(id: ID!): FormSubmissions @aws_api_key @aws_iam
  listFormSubmissions(filter: ModelFormSubmissionsFilterInput, limit: Int, nextToken: String): ModelFormSubmissionsConnection @aws_api_key @aws_iam
}

input ModelFormConditionInput {
  userId: ModelStringInput
  createdAt: ModelStringInput
  published: ModelBooleanInput
  name: ModelStringInput
  description: ModelStringInput
  content: ModelStringInput
  visits: ModelIntInput
  submissions: ModelIntInput
  shareURL: ModelStringInput
  projID: ModelIDInput
  and: [ModelFormConditionInput]
  or: [ModelFormConditionInput]
  not: ModelFormConditionInput
  updatedAt: ModelStringInput
}

input CreateFormInput {
  userId: String
  createdAt: AWSDateTime
  published: Boolean
  name: String
  description: String
  content: String
  visits: Int
  submissions: Int
  shareURL: String
  projID: ID
  id: ID
}

input UpdateFormInput {
  userId: String
  createdAt: AWSDateTime
  published: Boolean
  name: String
  description: String
  content: String
  visits: Int
  submissions: Int
  shareURL: String
  projID: ID
  id: ID!
}

input DeleteFormInput {
  id: ID!
}

type Mutation {
  createForm(input: CreateFormInput!, condition: ModelFormConditionInput): Form @aws_api_key @aws_iam
  updateForm(input: UpdateFormInput!, condition: ModelFormConditionInput): Form @aws_api_key @aws_iam
  deleteForm(input: DeleteFormInput!, condition: ModelFormConditionInput): Form @aws_api_key @aws_iam
  createClient(input: CreateClientInput!, condition: ModelClientConditionInput): Client @aws_api_key @aws_iam
  updateClient(input: UpdateClientInput!, condition: ModelClientConditionInput): Client @aws_api_key @aws_iam
  deleteClient(input: DeleteClientInput!, condition: ModelClientConditionInput): Client @aws_api_key @aws_iam
  createProjectt(input: CreateProjecttInput!, condition: ModelProjecttConditionInput): Projectt @aws_api_key @aws_iam
  updateProjectt(input: UpdateProjecttInput!, condition: ModelProjecttConditionInput): Projectt @aws_api_key @aws_iam
  deleteProjectt(input: DeleteProjecttInput!, condition: ModelProjecttConditionInput): Projectt @aws_api_key @aws_iam
  createEquipmentTag2(input: CreateEquipmentTag2Input!, condition: ModelEquipmentTag2ConditionInput): EquipmentTag2 @aws_api_key @aws_iam
  updateEquipmentTag2(input: UpdateEquipmentTag2Input!, condition: ModelEquipmentTag2ConditionInput): EquipmentTag2 @aws_api_key @aws_iam
  deleteEquipmentTag2(input: DeleteEquipmentTag2Input!, condition: ModelEquipmentTag2ConditionInput): EquipmentTag2 @aws_api_key @aws_iam
  createFormTag1(input: CreateFormTag1Input!, condition: ModelFormTag1ConditionInput): FormTag1 @aws_api_key @aws_iam
  updateFormTag1(input: UpdateFormTag1Input!, condition: ModelFormTag1ConditionInput): FormTag1 @aws_api_key @aws_iam
  deleteFormTag1(input: DeleteFormTag1Input!, condition: ModelFormTag1ConditionInput): FormTag1 @aws_api_key @aws_iam
  createFormSubmissions(input: CreateFormSubmissionsInput!, condition: ModelFormSubmissionsConditionInput): FormSubmissions @aws_api_key @aws_iam
  updateFormSubmissions(input: UpdateFormSubmissionsInput!, condition: ModelFormSubmissionsConditionInput): FormSubmissions @aws_api_key @aws_iam
  deleteFormSubmissions(input: DeleteFormSubmissionsInput!, condition: ModelFormSubmissionsConditionInput): FormSubmissions @aws_api_key @aws_iam
}

input ModelSubscriptionFormFilterInput {
  userId: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  published: ModelSubscriptionBooleanInput
  name: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  content: ModelSubscriptionStringInput
  visits: ModelSubscriptionIntInput
  submissions: ModelSubscriptionIntInput
  shareURL: ModelSubscriptionStringInput
  projID: ModelSubscriptionIDInput
  id: ModelSubscriptionIDInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionFormFilterInput]
  or: [ModelSubscriptionFormFilterInput]
}

type Subscription {
  onCreateForm(filter: ModelSubscriptionFormFilterInput): Form @aws_subscribe(mutations: ["createForm"]) @aws_api_key @aws_iam
  onUpdateForm(filter: ModelSubscriptionFormFilterInput): Form @aws_subscribe(mutations: ["updateForm"]) @aws_api_key @aws_iam
  onDeleteForm(filter: ModelSubscriptionFormFilterInput): Form @aws_subscribe(mutations: ["deleteForm"]) @aws_api_key @aws_iam
  onCreateClient(filter: ModelSubscriptionClientFilterInput): Client @aws_subscribe(mutations: ["createClient"]) @aws_api_key @aws_iam
  onUpdateClient(filter: ModelSubscriptionClientFilterInput): Client @aws_subscribe(mutations: ["updateClient"]) @aws_api_key @aws_iam
  onDeleteClient(filter: ModelSubscriptionClientFilterInput): Client @aws_subscribe(mutations: ["deleteClient"]) @aws_api_key @aws_iam
  onCreateProjectt(filter: ModelSubscriptionProjecttFilterInput): Projectt @aws_subscribe(mutations: ["createProjectt"]) @aws_api_key @aws_iam
  onUpdateProjectt(filter: ModelSubscriptionProjecttFilterInput): Projectt @aws_subscribe(mutations: ["updateProjectt"]) @aws_api_key @aws_iam
  onDeleteProjectt(filter: ModelSubscriptionProjecttFilterInput): Projectt @aws_subscribe(mutations: ["deleteProjectt"]) @aws_api_key @aws_iam
  onCreateEquipmentTag2(filter: ModelSubscriptionEquipmentTag2FilterInput): EquipmentTag2 @aws_subscribe(mutations: ["createEquipmentTag2"]) @aws_api_key @aws_iam
  onUpdateEquipmentTag2(filter: ModelSubscriptionEquipmentTag2FilterInput): EquipmentTag2 @aws_subscribe(mutations: ["updateEquipmentTag2"]) @aws_api_key @aws_iam
  onDeleteEquipmentTag2(filter: ModelSubscriptionEquipmentTag2FilterInput): EquipmentTag2 @aws_subscribe(mutations: ["deleteEquipmentTag2"]) @aws_api_key @aws_iam
  onCreateFormTag1(filter: ModelSubscriptionFormTag1FilterInput): FormTag1 @aws_subscribe(mutations: ["createFormTag1"]) @aws_api_key @aws_iam
  onUpdateFormTag1(filter: ModelSubscriptionFormTag1FilterInput): FormTag1 @aws_subscribe(mutations: ["updateFormTag1"]) @aws_api_key @aws_iam
  onDeleteFormTag1(filter: ModelSubscriptionFormTag1FilterInput): FormTag1 @aws_subscribe(mutations: ["deleteFormTag1"]) @aws_api_key @aws_iam
  onCreateFormSubmissions(filter: ModelSubscriptionFormSubmissionsFilterInput): FormSubmissions @aws_subscribe(mutations: ["createFormSubmissions"]) @aws_api_key @aws_iam
  onUpdateFormSubmissions(filter: ModelSubscriptionFormSubmissionsFilterInput): FormSubmissions @aws_subscribe(mutations: ["updateFormSubmissions"]) @aws_api_key @aws_iam
  onDeleteFormSubmissions(filter: ModelSubscriptionFormSubmissionsFilterInput): FormSubmissions @aws_subscribe(mutations: ["deleteFormSubmissions"]) @aws_api_key @aws_iam
}

type ModelClientConnection @aws_api_key @aws_iam {
  items: [Client]!
  nextToken: String
}

input ModelClientFilterInput {
  ClientName: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelClientFilterInput]
  or: [ModelClientFilterInput]
  not: ModelClientFilterInput
}

input ModelClientConditionInput {
  ClientName: ModelStringInput
  and: [ModelClientConditionInput]
  or: [ModelClientConditionInput]
  not: ModelClientConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateClientInput {
  ClientName: String!
  id: ID
}

input UpdateClientInput {
  ClientName: String
  id: ID!
}

input DeleteClientInput {
  id: ID!
}

input ModelSubscriptionClientFilterInput {
  ClientName: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionClientFilterInput]
  or: [ModelSubscriptionClientFilterInput]
}

type ModelProjecttConnection @aws_iam @aws_api_key {
  items: [Projectt]!
  nextToken: String
}

input ModelProjecttFilterInput {
  projectID: ModelStringInput
  projectName: ModelStringInput
  ClientID: ModelIDInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelProjecttFilterInput]
  or: [ModelProjecttFilterInput]
  not: ModelProjecttFilterInput
}

input ModelProjecttConditionInput {
  projectID: ModelStringInput
  projectName: ModelStringInput
  ClientID: ModelIDInput
  and: [ModelProjecttConditionInput]
  or: [ModelProjecttConditionInput]
  not: ModelProjecttConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateProjecttInput {
  projectID: String!
  projectName: String!
  ClientID: ID
  id: ID
}

input UpdateProjecttInput {
  projectID: String
  projectName: String
  ClientID: ID
  id: ID!
}

input DeleteProjecttInput {
  id: ID!
}

input ModelSubscriptionProjecttFilterInput {
  projectID: ModelSubscriptionStringInput
  projectName: ModelSubscriptionStringInput
  ClientID: ModelSubscriptionIDInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionProjecttFilterInput]
  or: [ModelSubscriptionProjecttFilterInput]
}

type ModelEquipmentTag2Connection @aws_api_key @aws_iam {
  items: [EquipmentTag2]!
  nextToken: String
}

input ModelEquipmentTag2FilterInput {
  Tag: ModelStringInput
  EquipmentName: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelEquipmentTag2FilterInput]
  or: [ModelEquipmentTag2FilterInput]
  not: ModelEquipmentTag2FilterInput
}

input ModelEquipmentTag2ConditionInput {
  Tag: ModelStringInput
  EquipmentName: ModelStringInput
  and: [ModelEquipmentTag2ConditionInput]
  or: [ModelEquipmentTag2ConditionInput]
  not: ModelEquipmentTag2ConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateEquipmentTag2Input {
  Tag: String!
  EquipmentName: String!
  id: ID
}

input UpdateEquipmentTag2Input {
  Tag: String
  EquipmentName: String
  id: ID!
}

input DeleteEquipmentTag2Input {
  id: ID!
}

input ModelSubscriptionEquipmentTag2FilterInput {
  Tag: ModelSubscriptionStringInput
  EquipmentName: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionEquipmentTag2FilterInput]
  or: [ModelSubscriptionEquipmentTag2FilterInput]
}

type ModelFormTag1Connection @aws_iam @aws_api_key {
  items: [FormTag1]!
  nextToken: String
}

input ModelFormTag1FilterInput {
  formID: ModelIDInput
  tagID: ModelIDInput
  contentTest: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelFormTag1FilterInput]
  or: [ModelFormTag1FilterInput]
  not: ModelFormTag1FilterInput
}

input ModelFormTag1ConditionInput {
  formID: ModelIDInput
  tagID: ModelIDInput
  contentTest: ModelStringInput
  and: [ModelFormTag1ConditionInput]
  or: [ModelFormTag1ConditionInput]
  not: ModelFormTag1ConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateFormTag1Input {
  formID: ID
  tagID: ID
  contentTest: String
  id: ID
}

input UpdateFormTag1Input {
  formID: ID
  tagID: ID
  contentTest: String
  id: ID!
}

input DeleteFormTag1Input {
  id: ID!
}

input ModelSubscriptionFormTag1FilterInput {
  formID: ModelSubscriptionIDInput
  tagID: ModelSubscriptionIDInput
  contentTest: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionFormTag1FilterInput]
  or: [ModelSubscriptionFormTag1FilterInput]
}

type ModelFormSubmissionsConnection @aws_iam @aws_api_key {
  items: [FormSubmissions]!
  nextToken: String
}

input ModelFormSubmissionsFilterInput {
  formId: ModelStringInput
  createdAt: ModelStringInput
  content: ModelStringInput
  id: ModelIDInput
  updatedAt: ModelStringInput
  and: [ModelFormSubmissionsFilterInput]
  or: [ModelFormSubmissionsFilterInput]
  not: ModelFormSubmissionsFilterInput
}

input ModelFormSubmissionsConditionInput {
  formId: ModelStringInput
  createdAt: ModelStringInput
  content: ModelStringInput
  and: [ModelFormSubmissionsConditionInput]
  or: [ModelFormSubmissionsConditionInput]
  not: ModelFormSubmissionsConditionInput
  updatedAt: ModelStringInput
}

input CreateFormSubmissionsInput {
  formId: String
  createdAt: AWSDateTime
  content: String
  id: ID
}

input UpdateFormSubmissionsInput {
  formId: String
  createdAt: AWSDateTime
  content: String
  id: ID!
}

input DeleteFormSubmissionsInput {
  id: ID!
}

input ModelSubscriptionFormSubmissionsFilterInput {
  formId: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  content: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionFormSubmissionsFilterInput]
  or: [ModelSubscriptionFormSubmissionsFilterInput]
}

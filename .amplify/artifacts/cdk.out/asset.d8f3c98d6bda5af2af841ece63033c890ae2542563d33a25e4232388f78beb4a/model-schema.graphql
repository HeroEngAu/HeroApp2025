type Form @model @auth(rules: [{allow: public, provider: apiKey}])
{
  userId: String
  createdAt: AWSDateTime
  published: Boolean @default(value: "false")
  name: String
  description: String @default(value: "")
  content: String @default(value: "[]")
  visits: Int @default(value: "0")
  submissions: Int @default(value: "0")
  shareURL: String
  FormSubmissions: [FormSubmissions] @hasMany(references: ["formId"])
  projID: ID
  projects: Projectt @belongsTo(references: ["projID"])
  equipmentTAGs: [FormTag1] @hasMany(references: ["formID"])
}

type Client @model @auth(rules: [{allow: public, provider: apiKey}])
{
  ClientName: String!
  projects: [Projectt] @hasMany(references: ["ClientID"])
}

type Projectt @model @auth(rules: [{allow: public, provider: apiKey}])
{
  projectID: String!
  projectName: String!
  ClientID: ID
  client: Client @belongsTo(references: ["ClientID"])
  forms: [Form] @hasMany(references: ["projID"])
}

type EquipmentTag2 @model @auth(rules: [{allow: public, provider: apiKey}])
{
  Tag: String!
  EquipmentName: String!
  forms: [FormTag1] @hasMany(references: ["tagID"])
}

type FormTag1 @model @auth(rules: [{allow: public, provider: apiKey}])
{
  formID: ID
  tagID: ID
  equipmentTag: EquipmentTag2 @belongsTo(references: ["tagID"])
  form: Form @belongsTo(references: ["formID"])
}

type FormSubmissions @model @auth(rules: [{allow: public, provider: apiKey}])
{
  formId: String
  createdAt: AWSDateTime
  content: String
  form: Form @belongsTo(references: ["formId"])
}